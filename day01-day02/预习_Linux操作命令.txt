1.>ls:查看目录内容

2.>cd:切换目录

3.>touch 文件名:创建新文件

4.>rm 文件名:删除文件

5.>mkdir 文件夹名: 创建新文件夹

6.>cp A文件名 B文件名:将A文件中的内容复制粘贴到B文件中.

7.>mv: mv A文件名 B文件名:将A文件中的内容复制粘贴到B文件中,B文件如果不存在则新创建.存在则添加到B文件内容的后面.

8.>cat 文件名:查看文件中的内容.

9.>more 文件名:分屏显示,查看文件中的内容

10.>grep 关键字 文件名:在目标文件中查找对应的关键字.实际作用就是字符匹配.正则表达式的结果.

11.>echo: 打印输出

12.>clear:清屏


远程管理常用命令:

1.>shutdown -P:关机/shutdown -r:重启/shutdown -Halt:挂起 /shutdown now:立刻关闭计算机

2.>ifconfig:查看/配置计算机当前的网卡配置信息.windows系统下是ipconfig.

3.>ping ip 地址: 检测  到目标ip地址的连接是否正常.

我们可以把 电脑 比作 电话，网卡 相当于 SIM 卡，IP 地址 相当于 电话号码

4.>ifconfig | grep inet:查看网卡对应的IP地址
提示:一个计算机可能会有一个物理网卡和多个虚拟网卡,在Linux中物理网卡的名字通常以ensXXX表示.

5.>127.0.0.1:被称为本地回环/环回地址,一般用来测试本机网卡是否正常.

6.>ping 127.0.0.1:检测本地网卡工作是否正常.

7.>ping 一般用于检测当前计算机到目标计算机之间的网络是否通畅.数值越大,速度越慢.
原理:网络上的机器都有唯一确定的IP地址,我们给目标IP地址发送一个数据包,对方就要返回一个数据包,根据返回的数据包以及时间,我们可以确定目标主机的测存在.


vi使用命令:

1.>vi 文件名: 打开/新建文件 注意:有后缀名的和没有后缀名的文件不是同一个文件,即使文件名字相同也是独立的两个文件.

2.>vi 文件名:非插入状态下,按下yy+数字+p:表示直接复制多少行.比如yy19p就是复制19行光标所在行的内容.

3.>按下u:取消之前 2.>复制的操作.

4.>按下ctrl + r :取消之前 3.>的按下u的操作.

5.>vi 文件名 +行数:打开一个文件并且定位到指定行.注意:+号是加号,必须写的,不是和的意思.

6.>以.开头的文件是一个隐藏文件.

7.>ls -la:显示文件详细信息(包括权限,所属用户组,用户名,进程ID,创建时间,是否是隐藏文件等等)

8.>vi异常退出的时候,在磁盘上会保存有交换文件(.swap文件),下次使用的时候,按下d就可以删除交换文件,这样就可以直接进入文件进行操作.

9.>三种工作模式:命令模式,末行模式,编辑模式.  vi不支持鼠标操作.

10.>命令模式:vi+文件名  进入的都是命令模式.打开文件首先进入的就是命令模式,是使用vi的入口.

    通过命令对文件进行常规的编辑操作,例如,定位,翻页,复制,粘贴,删除.

    在其他图形编辑器下,通过快捷键,或者鼠标实现的操作,都在命令模式下实现.

11.>末行模式:执行 保存(w),退出(q),保存并退出(wq或者x) 强行退出(q!)等操作.

    要退出vi返回到控制台,需要在末行模式下输入命令

    末行模式是vi的出口.

12.>编辑模式:正常的编辑文字.

13.>三种模式之间的切换:

    命令模式 (输入:号) --> 末行模式
    末行模式 (按下Esc键) --> 命令模式


    命令模式 (输入i) --> 编辑模式
    编辑模式 (按下Esc键) --> 命令模式

    记住:末行模式 和 编辑模式 之间没有连接通道,必须经过命令模式.

14.>vi常用命令:

    1.重复次数:
        在命令模式下,先输入一个数字,再跟上一个命令,可以让这个命令重复执行指定次数.
    2.移动和选择:
        vi之所以快,关键在于能够快速定位到要编辑的代码行.
        移动命令 能够和编辑操作命令组合使用.
    3.编辑操作:
        删除,复制,粘贴,替换,缩排.
    4.撤销和重复
    5.查找替换
    6.编辑

学习提示:

    1.vi命令较多,不要期望一下子全部记住,个别命令忘记了,只是会影响编辑速度而已.
    2.在使用vi命令时,注意关闭中文输入法.

15.>移动命令:

    1.方向和行内移动:
        h --> 向左(食指)
        j --> 向下(食指)
        k --> 向上(中指)
        l --> 向右(无名指)

    2.行内移动:

        w -->向后移动一个单词
        b -->向前移动一个单词
        0 -->行首
        ^ -->行首,第一个不是空白字符的位置
        $ -->行尾

    3.行数跳转

        gg -->文件顶部
        G -->文件末尾
        数字+gg -->移动到数字对应的行数
        数字+G -->移动到数字对应的行数
        :数字 -->移动到数字对应的行数

    4.屏幕移动(翻页):

        Ctrl+b -->向上翻页(b:back)
        Ctrl+f -->向下翻页(f:forward)
        H -->屏幕顶部
        M -->屏幕中间
        L -->屏幕底部

    5.段落切换:

        vi中使用空行来区分段落.
        在程序开发时,通常一段功能相关的代码会写在一起 -- 之间没有空行.
        { --> 上一个段落
        } --> 下一个段落

    6.括号切换

        在程序世界中,(),[],{}使用频率很高,而且都是成对出现的.

        % -->括号匹配及切换

    7.利用标记返回之前需要编辑代码的位置:

        在开发的时候,某一块代码可能需要稍后处理,例如:编辑,查看.
        此时先使用 n 增加一个标记,这样可以在需要时快速地跳转回来 或者 执行其他编辑操作.
        标记名称 可以是a~z 或者A~Z 之间的任意一个字母.
        添加了标记的行如果被删除,标记同时被删除.
        如果在其他行添加了相同名称的标记,之前添加的标记也会被替换掉.

        mx(m -->mark) -->添加标记x,x是a~z或者A~Z之间的任意一个字母.
        'x ---> 直接定位到标记x所在的位置.

16.>选中文本(可视模式):

    学习复制命令前,应该先学会怎么样选中要复制的代码.
    在vi中要选择文本,需要先使用Visual命令切换到可视模式.
    vi中提供了三种可视模式,可以方便程序员选择选中文本的方式.
    按下Esc键可以放弃选中,返回到命令模式.

    v --> 可视模式,从光标位置开始按照正常模式选择文本.
    V --> 可视行模式,选中光标经过的完整行.可以直接按下shift + v 组合键(实际表示的就是大写的V)
    Ctrl + v:可视块模式 ,垂直方向选中文本.

    可视模式下,可以和移动命令连用,例如,ggVG能够选中所有内容.

17.>撤销和恢复撤销:
    在学习编辑命令之前,先要知道怎样撤销之前一次 错误的 编辑操作.

    u(undo) --> 撤销上次命令

    Ctrl + r(redo) --> 恢复撤销的命令

18.>删除文本:

    x(cut) -->删除光标所在的字符,或者选中的文字

    d(移动命令) --> 删除移动命令对应的内容

    dd(delete) --> 删除光标所在行,可以 ndd删除多行(n表示数字)

    D(delete) --> 删除至行尾,就是把一行的内容全部删除.

    提示:如果使用可视模式已经选中了一段文本,那么无论使用d还是x,
    都可以删除选中文本

    删除命令可以和移动命令连用,以下是常见的组合命令.

    数字 + x :删除指定长度的字符.例如,5x就是删除5个字符.

    可视模式v,继续按下% + x 就可以删除括号以及括号内部的内容.

    数字 + dd:删除指定的数字行数,比如 5dd 就是删除5行内容.

    d + w: 删除一个单词.

    d + 数字(比如10) + G: 就是删除光标行到第10行的全部内容.

    d + 0: 从光标位置删除到一行的起始位置.

    d + }: 从光标位置删除到段落结尾.

    d + 'a: 从光标所在行删除到标记之间的所有代码.

19.>复制和粘贴(1):

    vi中提供有一个被复制文本的缓冲区.
    复制命令会将选中的文字保存在缓冲区
    删除命令删除的文字会被保存在缓冲区
    在需要的位置,使用粘贴命令可以将缓冲区的文字插入到光标所在的位置.

    y + 移动命令 --> 复制.注意,y是copy的最好一个字母.
    yy --> 复制一行.可以使用 数字 + yy 复制数字指定的行数.例如19yy就是复制19行.
    p --> paste(粘贴)

19.>复制和粘贴(2):

    系统剪贴板的内容不能使用p粘贴.

    提示:
        命令d,x类似于图形界面的剪切操作 --->Ctrl + X
        命令y类似于图形界面的复制操作 ---> Ctrl + C
        命令p类似于图形界面的粘贴操作 ---> Ctrl + V
        vi 中的文本缓冲区同样只有一个,如果后续做过复制,剪切操作,之前缓冲区中的内容会被替换掉.
    注意:
        vi中的 文本缓冲区 和系统的 剪贴板 不是同一个.
        所以在其他软件中使用Ctrl + C 复制的内容,不能在vi中通过p命令粘贴.
        可以在 编辑模式 下使用鼠标右键粘贴.
        删除命令本质上就是一个剪切操作.

20.>替换命令:

    r -->替换当前字符.   在命令模式下使用
    R -->替换当前行 光标之后的字符.  会进入替换模式.

    R命令进入替换模式,替换完成后,按下Esc键 可以返回到 命令模式.
    替换命令的作用就是不用进入 编辑模式,对文件进行 轻量级的修改.

21.>缩排和重复执行:

    >> ---> 向右增加缩进
    << ---> 向左减少缩进
    .  ---> 重复上次命令

    缩排命令 在开发程序时,统一增加代码的缩进 比较有用.
        一次性在选中的代码前面增加4个空格,就叫做增加缩进.
        一次性在选中的代码前面删除4个空格,就叫做减少缩进.
    在可视模式下,缩排命令只需要使用一个 > 或者 <
    在程序中, 缩进 通常用来表示代码的归属关系
        前面空格越少,代码的级别越高.
        前面空格越多,代码的级别越低.

22.>查找:
    常规查找:
        /str --> 查找str
        查找到指定内容之后,使用Next 查找下一个出现的位置.
            n: 查找下一个
            N: 查找上一个
        如果不想看到高亮显示,可以随便查找一个文本中不存在的内容即可.

    单词快速匹配:
        * --> 向后查找当前光标所在的单词
        # --> 向前查找当前光标所在的单词
    在开发中,通过单词快速匹配,可以快速看到这个单词在什么位置使用过.

23.>查找与替换:

    在vi中查找和替换命令需要在末行模式下执行.
    记忆命令格式,固定格式如下:

    :%s///g

    1.>全局替换

        一次性替换文件中的所有出现的旧文本.
        命令格式如下:

        :%s/旧文本/新文本/g

    2.>可视区域的替换

        先 选中 要替换文字的 范围
        命令格式如下:
        :s/旧文本/新文本/g

    3.>确认替换:

        如果把末尾的g改成gc,在替换的时候,会有提示.

        1.y --> yes 替换
        2.n --> no  不替换
        3.a --> all 替换所有
        4.q --> quit 退出替换
        5.l --> last 最后一个,并把光标移动到行首
        6.Ctrl + E --> 向下滚屏
        7.Ctrl + Y --> 向上滚屏

24.>进入编辑模式的6个命令:

    1.>插入命令:
    在vi中除了常用的i进入编辑模式外,还提供了以下命令同样可以进入编辑模式:
        i --> insert: 在当前字符前面插入文本
        I --> 在行首插入文本
        a --> append 在当前字符后添加文本
        A --> 在行末添加文本
        o --> 在当前行的后面插入一个空行
        O --> 在当前行的前面插入一个空行

25.>编辑命令和数字的使用:

    比如5个*: 命令模式下先输入5,再继续输入i,然后输入*,按下Esc键即可.

    注意:在正常的开发过程中,在进入编辑模式之前,不要按下数字键.(会复制多行,需要回来进行删除操作,很麻烦)

26.>利用可视块给多行代码增加注释:

    Ctrl + v :进入可视块模式,移动光标选中多行,继续输入I进入插入模式,输入# 号后按下Esc键即可完成多行注释.

    操作步骤:
        1.移动到要添加注释的第一行代码,按下^来到行首
        2.按下Ctrl + v 进入 可视块 模式
        3.使用j向下连续选中要添加的代码行
        4.输入I进入编辑模式,并在行首插入. 注意:一定要使用I
        5.输入# 也就是注释符号
        6.按下Esc键 返回到命令模式,返回之后 vi会在 之前选中的 每一行代码 前插入#

27.>分屏命令:

    属于vi的高级命令 -- 可以同时编辑和查看多个命令

    1.>末行命令扩展:
        末行命令 主要是针对文件进行操作:保存,退出,保存并退出,搜索并替换,另存,新建,浏览文件

        :e . --> 会打开内置的文件浏览器,浏览当前目录下的文件
        :n + 文件名 --> 新建文件
        :w + 文件名 --> 另存为,但是仍然是编辑当前文件,并不会切换文件

    2.>w命令 阶段性备份代码

        就是在每次编辑完一定任务的时候,进入 :w + 备份的文件名 即可实现阶段性的备份.最后阶段的时候只需要输入:w 就可以直接将之前备份的文件内容全部写入到一个整体的文件中.

    3.>切换分屏窗口

        使用分屏命令,可以同时编辑和查看多个命令.尤其在对比两个文件的时候.

        s : split是英文分开的意思,  v: vertical 是英文垂直的意思.

        :sp + 文件名 -->  横向增加分屏
        :vsp + 文件名 --> 纵向增加分屏

        1.>切换分屏窗口:

            分屏窗口都是基于Ctrl + w 这个快捷键的,w对应的英文单词是window

        w :window --> 切换到下一个窗口
        r :reverse --> 互换窗口
        c :close --> 关闭当前窗口,但是不能关闭最后一个窗口
        q :quit --> 退出当前窗口,如果是最后一个窗口,则关闭vi
        o :other --> 关闭其他窗口































