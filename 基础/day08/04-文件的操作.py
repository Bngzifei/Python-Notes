"""文件的作用:

文件作用:持久化数据
文件操作:打开文件,关闭文件  读取,写入(编辑的意思)
打开了要记得关闭,否则内存放不下了就卡住了,最后就会蓝屏
专业名词称为内存泄露(就是内存中的数据一直没有释放)

w:write 写入  文件不存在会自动创建,如果存在会覆盖(替换掉了),文件定位在最前面(最后面也对)
r:read 只读 只读方式打开文件时,如果文件不存在会报错.文件定位在最前面
a:add  末位添加 如果文件不存在,创建,如果存在,则在文件中的字符末位添加.文件定位在最后面.

r+:可读可写
w+:可读可写

open()如果不写打开模式,默认是只读方式 r

用来存储数据
大脑存储的都是临时数据
各式各样的后缀名
持久化:表示是将数据存储到文件,保存在硬盘上面.内存中的数据都是临时的,用完了就会被回收释放.
(湖北人)


"""
# f = open('123.txt','w')  # 以只读的方式打开123文件
# f.write('hello')  # 写入文件
# f.close()  # 关闭文件,这里不要丢
# 关掉之后就从内存上面释放了,硬盘上面不会丢掉
# 不需要手动关闭文件
# with open('E:\\黑马Python21期基础班\\Python基础班\\222.txt', 'w') as f:  # f是一个变量,来接收写入的字符串
# 	f.write('Python')

with open('E:/黑马Python21期基础班/Python基础班/2221.txt', 'w') as f:  # f是一个变量,来接收写入的字符串
	f.write('Python')


"""路径:
计算机只认绝对路径
路径:文件位置的表达方式(就是这个文件到底在哪里?)

其他系统只用/斜杠
windows 支持 \(反斜杠)  /(斜杠)  在win写路径分隔符时尽量使用斜杠,为了程序在移植到其他系统上面不出错

相对路径:有参照物的.不是绝对路径就是相对路径

绝对路径:以盘符开头的(window),mac以用户名开头的

基于文件所在的文件夹里面

Python默认路径是基于当前.py文件所在的目录(目录就是文件夹),就是自己正在使用的.py文件所在的文件夹就是当前的路径.



"""
