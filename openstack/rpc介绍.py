# coding:utf-8

原来这里说的服务就是服务器的意思.服务就是之前的项目程序,就是一个web服务器


RPC:(Remote Procedure Call) --意思是远程过程调用.
是一种通过网络从远程计算机程序程序上请求服务,而不需要了解底层网络技术的协议.
RPC协议假定某些传输协议的存在,比如TCP或UDP,为通信程序之间携带信息数据.在OSI网络通信
模型中,RPC跨越了传输层和应用层.RPC使得开发包括网络分布式多程序在内的应用程序更加容易.




RPC采用 客户机/服务器 模式.
请求程序就是一个客户机,而服务提供程序就是一个服务器.首先,客户机调用进程发送一个有进程参数的调用信息到服务进程,然后等待应答信息.在服务器端,进程保持睡眠状态直到调用信息到达为止.
当一个调用信息到达,服务器获得进程参数,计算结果,发送答复信息,然后等待下一个调用信息,最后,客户端调用进程接收答复信息,获得进程结果,然后调用执行继续进行.


为什么要用RPC?
    1.>可以做到分布式,现代化的微服务
    2.>部署灵活
    3.>解耦服务
    4.>扩展性强

RPC 的目的是让你在本地调用远程服务器.的一种方式.对你来说这个调用是透明的,你并不知道这个调用的方法是部署在哪里.通过RPC能够解耦服务,这才是使用RPC的真正目的.

RPC结构: client-server结构,调用方是client,远程被调用方是server. 其实双方的地位一样,看谁调用谁而已.

RPC工作原理:

1.>调用客户端句柄,执行传送参数   句柄(就是文件描述符)  客户端:就是本地主机上面的一个应用程序,类似mysql的shell终端
2.>调用本地系统内核发送网络消息  本地系统内核:就是一台具体的主机,操作系统是linux或unix或windows.操作系统内核中的发送网络消息的模块进行发送发送消息.
3.>消息传送到远程主机
4.>服务器句柄得到消息并取出参数
5.>执行远程调用过程
6.>执行的调用过程将结果返回给服务器句柄
7.>服务器句柄返回结果,调用远程系统内核发送网络消息
8.>消息传回本地主机
9.>客户端句柄由内核接收消息
10.>客户端接收句柄返回的数据.

RPC框架有哪些?

一般主流框架都实现了跨平台跨语言的C/S RPC调用

dubbo,主流配合hessian协议使用,duboo/hessian.
DUBBO是一个分布式服务框架，致力于提供高性能和透明化的RPC远程服务调用方案，
是阿里巴巴SOA服务化治理方案的核心框架，每天为2,000+个服务提供3,000,000,000+次访问量支持，并被广泛应用于阿里巴巴集团的各成员站点。

thrift,Apache Thrift software framework.


hprose,High Performance Remote Object Service Engine

RPC-HTTP:

HTTP本质来讲是RPC调用的一种实现方式.换种方式说,RPC客户端可以通过HTTP连接到RPC服务端程序执行RPC(远程过程调用)

把RPC比作交通工具,那么HTTP就是相当于汽车


RPC 框架的优点:
    RPC框架一般使用长链接，不必每次通信都要3次握手，减少网络开销

    RPC框架一般都有注册中心，有丰富的监控管理

    发布、下线接口、动态扩展等，对调用方来说是无感知、统一化的操作

    协议私密，安全性较高

    rpc 协议更简单内容更小，效率更高

    服务化架构、服务化治理，RPC框架是一个强力的支撑.

RPC-REST
    REST 是定义http接口调用的一种方式，REST 也可以说是RPC调用的实现方式。


那RPC最大的优点，或者说它相比简单的HTTP接口，它的优势、更适合它的业务场景是怎样呢？简单的HTTP又哪里不足，哪些场景明显不太适合呢？

答:
    http接口是在接口不多、系统与系统交互较少的情况下，解决信息孤岛初期常使用的一种通信手段；优点就是简单、直接、开发方便。利用现成的http协议进行传输。但是如果是一个大型的网站，内部子系统较多、接口非常多的情况下，RPC框架的好处就显示出来了，首先就是长链接，不必每次通信都要像http一样去3次握手什么的，减少了网络开销；其次就是RPC框架一般都有注册中心，有丰富的监控管理；发布、下线接口、动态扩展等，对调用方来说是无感知、统一化的操作。第三个来说就是安全性。最后就是最近流行的服务化架构、服务化治理，RPC框架是一个强力的支撑

    RPC:远程过程调用。RPC的核心并不在于使用什么协议。RPC的目的是让你在本地调用远程的方法，而对你来说这个调用是透明的，你并不知道这个调用的方法是部署哪里。通过RPC能解耦服务，这才是使用RPC的真正目的。RPC的原理主要用到了动态代理模式，至于http协议，只是传输协议而已。简单的实现可以参考spring remoting，复杂的实现可以参考dubbo。


所以,以后说写一个服务就是写一个服务端的应用app