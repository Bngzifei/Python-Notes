"""
进程:资源分配
线程:调度,执行

线程依赖于进程

进程不共享数据,线程共享<所以引入互斥锁>

多进程比单进程的多线程稳定性强.

多线程省资源.<多任务>


隔离性:进程

互通性:线程

CPython解释器产生的多线程是不可以使用多核的cpu.其他的可能可以.
因为GIL全局解释器锁.

工厂流水线 -> 线程
再盖一个新工厂 --> 进程

"""