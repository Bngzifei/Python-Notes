"""
面试:迭代器,生成器
实际开发:协程 gevent

可迭代对象:列表/字典/元组/字符串/集合/文件对象  ...

类似实际生活中看书的时候,看到哪一页就在那一页中放一个书签,
主要是为了快速翻到那一页,迭代就是类似于翻书的过程.每次都有一个工具将我们读到哪一页
这个位置记录下来.

迭代器的作用:帮助 我们记录迭代过程的工具.称之为迭代器.里面记录的是位置信息.
在每次遍历之后,会自动的向下移动一个位置.并记住这个位置.
用户直接找迭代器要即可,
记录遍历的位置信息.
记录迭代的位置信息.

iter(可迭代对象)  把第一个元素放进来,并返回迭代器(就是自己)
next(iter(可迭代对象))
"""

if __name__ == '__main__':
	data = [1, 2, 3, 4, 5]
	# 遍历   --> 迭代  这个过程就是迭代
	# for i in data:
	# 	print(i)

#  模拟for循环的过程
	# 取出对象中的迭代器
	# 1.取出可迭代对象的首个元素,放入迭代器中,并返回迭代器
	i = iter(data)
	# 2.不断 通过迭代器取出下一个元素的值,直到 迭代完成,抛出StopIteration: 停止迭代的异常
	# print(next(iter(data)))
	print(next(i))
	print(next(i))
	print(next(i))
	print(next(i))
	print(next(i))
	# print(next(i))
	# 如果迭代完成,则抛出异常  StopIteration
