"""
closure:闭包的意思
闭包特点:
1.>函数的嵌套定义,就是函数定义里面有另外一个函数的定义
2.>外部函数返回内部函数的引用<引用地址>
3.>内部函数可以使用外部函数提供的自由变量/环境变量  <顺序是先去找自己的位置参数,看看是否有同名,如果没有就向外扩展一层,继续这个过程.直到找到>
这就是闭包的三个特点

概念:内部函数 + 自由变量 构成的 整体    这是IBM 开发网站的一个说法
理解:内部函数 + 外部函数提供给内部函数调用的参数.

"""


def func(num1):
	# 外部函数  的变量称之为自由变量/环境变量 内部函数也可以使用
	print('in func', num1)

	def func_in(num2):
		print('in func_in', (num1 + num2))

	# return func_in()# 这样就会调用func_in函数了
	# 返回func_in的引用地址 外部就可以进行调用func_in函数了
	return func_in


# 因为func_in函数并没有被调用
# func()  # in func
# 接收外部函数func 返回值return是 内部函数func_in的引用
f = func(99)
f(100)
