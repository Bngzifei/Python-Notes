管理员账号密码:
admin
123456abc


注意:这几天ubuntu就挂起.不要直接关机了.因为每次服务都要重启.麻烦的要死

一般都是逻辑删除

关闭ubuntu后,docker就会停止,它里面的容器也会全部停止.所以来了还要把各种容器开启

django前后端不分离:加载模板,进行渲染即可.

几乎都是render渲染模板

响应json的换成模板

django实现同一功能的包有很多.


页面静态化:定时器,操作电脑的系统时间


首页和分类界面


页面静态化:就是模板一样.经过渲染写入到html页面.将来的数据就不需要进行数据库查询.直接在html里面显示
商品详情的页面静态化

用户的浏览记录.

下午还要讲

搜索引擎:全世界最牛逼的.流行的.

百度

首页就是广告和商品


首页的内容都是一样的.既然是这样,每个人去访问的时候页面显示的内容都是一样的.
那么,就没有必要把每次的请求都去数据库查询.所以使用页面静态化可以大大提高服务器性能.


为了减少查询次数.提升访问速度.使用页面静态化


将动态渲染生成的页面保存成html文件.放到静态文件的服务器
用户访问的时候访问的直接就是处理好的html数据.

属于每一个用户的数据,是不可以进行静态化的.因为每个人的个人数据是不一样的.

用户变化的.埋藏一点js代码.实现无刷新.

页面预加载.

crons:定时器简写

所以使用定时器来定时把网页重新生成一次


用户的个人的不一样的.不需要静态化

运营修改数据之后需要定时的生成html页面.

定时器实现


每周的星期日  '* * * * */0'

异步任务实现页面静态化


回来再展示一下.


事件监听:  list.html 商品类别的列表页面


首页index.html使用的是定时器.等下回来验证一下  cron定时器


不要纠结查询数据库这些,但是要理解页面静态化的技术栈



就是把查出来的数据,放到django的模板中,使用定时器/监听事件<运营人员修改>触发生成静态html的页面


展示出来的是sku.搜索的时候是spu


详情页面


全文搜索

本质上数据库的like也可以.但是效率太低

这里使用搜索引擎.

提前把你要的预处理好了.

脱离了数据库,提前把索引生成好了.


elasticsearch:全文搜索的首选.分析海量数据

底层是lucene.无法调用接口,需要自己手写

提供了restapi接口.通过接口进行调用

java写的

不支持中文分词建立索引

所以:配合扩展 -ik实现


2个任务:全文搜索    浏览记录

需要把老师的的config配置拷贝到里面

就是一个服务器,类似与fastdfs


hastack:对接elasticsearch的

类似于orm框架语句.

还可以对接whoosh.结巴分词


但是最好的还是elasticsearch版本必须是2.4.1

caption:副标题
























































