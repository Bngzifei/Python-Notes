"""
软件开发的脚手架的概念是从建筑学术语上引申而来。在建筑学上，脚手架指施工现场为工人操作并解决垂直和水平运输而搭设的各种支架。你见过大楼施工吧？在大楼外墙围的那圈支架就是其中一种脚手架。
在软件开发上（当然也包括前端开发）的脚手架指的就是：有人帮你把这个开发过程中要用到的工具、环境都配置好了，你就可以方便地直接开始做开发，专注你的业务，而不用再花时间去配置这个开发环境，这个开发环境就是脚手架。
比如vue.js就有个vue-cli脚手架，基于node.js的开发环境，作者帮你把开发环境大部分东西都配置好了，你把脚手架下载下来就可以直接开发了，不用再考虑搭建这些工具环境。

<<石头的读者>>

google设备验证:
https://accounts.google.com/b/0/displayunlockcaptcha

软件设计中的抽象与分析解释:
抽象，是忽略次要因素，抓住关键点的技能，尽可能站在更高的层次思考问题，而不受细节影响。 分析，则是细化技术细节，从中发现问题，评估影响，保证整体思路确实可行，在各个方面都能满足设计要求。

http://download.sangfor.com.cn/Uploads/File/jwg_20180424/%E6%B7%B1%E4%BF%A1%E6%9C%8D%EF%BC%9A%E9%A6%96%E6%AC%A1%E5%85%AC%E5%BC%80%E5%8F%91%E8%A1%8C%E8%82%A1%E7%A5%A8%E5%B9%B6%E5%9C%A8%E5%88%9B%E4%B8%9A%E6%9D%BF%E4%B8%8A%E5%B8%82%E6%8B%9B%E8%82%A1%E6%84%8F%E5%90%91%E4%B9%A6.pdf


中华石杉汇总:https://www.cnblogs.com/skyislimit/p/10895613.html


事件模型以开源库libevent,libev,libuv等为代表。

其底层实现，在windows下一般采用完成事件，BSD下采用kqueue，Linux下采用epoll的ET模式。

主体思路是由“框架库+操作系统”完成IO，只在IO完成后以事件的形式知会上层应用进行处理， 尽量减少上层应用在IO等待上浪费的时间。

协程既有多线程的高并发特点，又有易于编程的特点，非常适合实现富含IO操作的编程任务.
"""