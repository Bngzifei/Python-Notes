一.搭建界面
1.导入pygame包  pygame初始化  pygame.init()
2.创建窗口,并且指定窗口尺寸  注意尺寸数据要包成一个元组(宽, 高)
3.加载背景图片,注意路径及后缀问题
4.把背景图片贴到窗口上,并且指定背景图片在窗口上的位置 位置包含x,y也应该包成一个无组(x, y)
5.窗口刷新,为了让程序不退出,把贴图和刷新窗口代码写在无限循环while True 里面.


二.监听事件
1.把文档中的事件代码复制粘贴到无限循环里面
2.导入两个模块  sys和 pygame.locals
3.程序可以点击界面图标[x],关闭窗口.也可以收到按下键盘某个键的事件


三.代码调整
1.定义了一个main函数,把搞事情的代码都放到main函数中
2.if __name__ == '__main__'
目的:如果将来此文件被当作模块导入使用后,不需要执行到不必要的代码 main()
3.把按下只触发一次事件的代码换成了  按下一直触发的事件(长按事件).
一定要注意按下一值触发的代码应该和for是同一个缩进.不要写到for循环里面,二者是并列的,不是属于关系.


四.英雄飞机的移动
1.在加载完背景图片的代码后面,加载英雄飞机图片
2.贴背景图片的代码后面,贴英雄飞机图片  注意计算英雄飞机的初始x坐标
x = 窗口宽的一半 - 飞机宽的一半  (x表示的都是最左边的位置,不是一个图像的中间位置)
3.在while True外面定义了x,y两个变量用来标记飞机的贴图位置
4.在向左向右移动的事件中去修改x坐标的值  向左x减小,向右x增大.向上y减小,向下y增大.


五.英雄飞机面向对象
1.定义了一个HeroPlane类,把原本的加载英雄飞机图片换成一个图片属性
2.把x,y变量也定义成属性,把window通过定义属性的方式记录在属性中.(使用参数传递进来)
3.定义了一个display方法专门用来显示英雄飞机
4.把x -= 5 和 x += 5 代码换成 move_left(). move_right()方法
5.注释掉加载英雄飞机图片和定义x,y的代码.换成创建一个英雄飞机的实例对象,注意传递实参.
6.把英雄飞机贴图的代码换成调用英雄飞机对象的display()方法
7.把 x -= 5和x += 5的代码分别换成调用move_left,move_right方法


六.发射子弹
1.模仿飞机类定义子弹类, 定义了四个属性 img,x,y,window
2.定义display贴图方法以及move方法.注意:move方法中y -= 5.子弹只是向下移动.
3.在飞机类中定义fire方法,在其中创建子弹实例对象,不要直接贴子弹图
4.在飞机类中多定义了一个Bullet子弹列表属性,来保存发射过的所有子弹
5.在贴英雄飞机图片的代码后面遍历子弹列表属性,取出每一个子弹,重复贴图和移动
6.在space事件后面调用英雄飞机的fire方法


七.优化代码
1.导入time模块 在while True 最后面time.sleep(0.02) # 让无限循环执行到这里时,休眠0.02秒
2.在英雄飞机类中,定义了一个display_bullet方法,把子弹显示功能的代码放在这个方法中
3.在遍历子弹列表中加入if 判断,判断子弹是否飞出窗口,如果没有飞出,继续对这个子弹进行贴图和移动.如果超出后应该将其从列表中删除
4.删除时的注意点:在遍历子弹列表的for上面定义了一个临时列表,用来保存要被删除的子弹对象,把飞机窗口的子弹添加到临时列表中
5.遍历临时列表,把子弹从子弹列表中删除,让超出窗口的子弹销毁.


八.敌机移动
1.定义敌机类 EnemyPlane 定义了四个属性 img,x,y,window
2.定义贴图display方法和move方法,self.y += 5
3.在move方法判断敌机是否飞出窗口,如果飞出了窗口,就将敌机对象的x,y,img属性随机重置
4.在创建多架英雄飞机的代码后面,定义一个敌机列表变量,用来保存所有创建的敌机对象
5.用for循环创建多架敌机对象,并保存到敌机列表中.创建敌机时,为了让敌机第一次出现时候,不是重叠在一起,让图片名,x,y属性都是随机产生.
6.在贴完子弹图代码后面,遍历敌机列表,让每一个敌机进行贴图和移动


九.抽取飞机基类(父类)
1.定义一个BasePlane基类, 把英雄飞机类和敌机类中共有的四个属性复制到 基类中.
2.把英雄飞机类和敌机类中共有的display方法复制到飞机基类中
3.让敌机类继承BasePlane基类,删除原来敌机类中的init()方法和display()方法.
4.让英雄飞机类继承BasePlane基类,删除原来的display()方法.把英雄飞机类中init()方法中的img,x,y,window四个属性删除使用super().init(四个参数),自定义英雄飞机类的子弹列表属性:self.bullets = []


十.背景图片面向对象
1.定义了Map类, 给它里面定义了img,x,y,window四个属性, display方法
2.把原本加载背景图片的代码换成创建map对象,把原本贴背景图片的代码换成调用map对象的display方法.

十一.抽取界面元素类
1.定义界面元素类Item 把它共有的四个属性和display方法放在此类中
2.让Map,Bullet,BasePlane类都分别继承Item类,然后把这四个类中的init()方法和display方法删除


十二.抽取类属性
1.因为Item类中有一个window属性,它将来永远存的都是同一个窗口,地址不变.所以把这个实例属性换成类属性.
2.把init()方法的window形参删除,同时把后面创建对象时和window形参对应位置传递的实参全部删除.
3.在创建窗口的代码后面给window类属性赋值,给类属性赋值的时候一定要使用类对象进行赋值.



重点理解 9-12 抽取的实现思想和过程,优化代码的精髓




实际开发时候防止出现越界的技巧:

len(list) = 5
1000 % len(list)   只会是 0 - 4,这样索引就永远不会越界


十三.打包代码成可执行文件

pyinstaller: 打包


pip3 install pyinstaller # 安装程序打包工具,

pyinstall -w 文件名.py  执行打包,生成.exe的可执行文件

记得把素材文件res(就是图片啊,声音等等的)放在.exe文件所在的文件夹里面,这样才能顺利运行.exe的程序.

























