"""
如果两个类或多个类中有相同的方法,相同的属性,此时可以把它们相同的属性和方法放在一个类中,让另外一个去继承它.继承后就可以拥有另外一个类的方法和属性

子类继承了父类的所有属性和方法.

继承:被继承->叫父类,去继承别人的->叫子类

继承格式: class 类名(父类的名字)

编程源于生活:不要违背伦理

狗不能继承人,所以需要再设置一个类 :动物类 来让狗和人去继承 这个类


继承中: 默认所有的类都会继承object,为了拥有object的方法.Object拥有创建对象,初始化对象的方法
str()方法也是object
"""
"""
实例对象:通过类名创建出来的对象叫做实例对象.真正存在的.

类对象:类名就叫类对象.不加()出来的

实例属性: 在init()方法中定义的属性,就是实例属性,被每一个实例对象独有

私有的实例属性: 在实例属性名字前加__
"""


# class Dog:(object)  经典类写法(旧类)
class Dog:  # 新式类写法
	def drink(self):
		print(self)  # self就是 XTQ <__main__.XTQ object at 0x00000279ACAF8A90>
		print('喝点红酒')

	def eat(self):
		print(self)  # <__main__.XTQ object at 0x00000219E65C8AC8>
		print('牛排')


# 代码重复了,冗余了,同名方法,同名属性
class XTQ(Dog):
	pass


xtq = XTQ()
xtq.eat()
xtq.drink()
